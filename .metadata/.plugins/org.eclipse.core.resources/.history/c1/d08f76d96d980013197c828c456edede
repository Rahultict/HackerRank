package DynamicProgramming;

import java.util.Map;
import java.util.Scanner;

public class Solution {
	
	public static int fact(int n){
		
		int fact = 1;
		
		if(n <= 1)
			return 1;
		
		fact = n* fact(n -1);
		
		return fact;
		
	}
	
	public static int getNumCombos(int numCols){
		
		int numCombs = 0;	
		int numV = 0;
		for(int numH = 0 ; numH <= numCols ; numH += 4){
				numV = numCols - numH ;
				numCombs += fact(numH/4 + numV)/(fact(numH/4) * fact(numV));
		}
		
		return numCombs;
		
	}
	
	
	public static boolean checkIfPrime(int n){
		
		for(int i = 2 ; i < n ; i ++){
			if(n%i == 0){
				return false;
			}
		}
		
		return true;
		
	}
	
	public static int getNumPrimes(int n){
		int numPrimes = 0;
		
		for(int i = 2 ; i <= n ; i++){
			if(checkIfPrime(i))
				numPrimes++;
		}
		return numPrimes;
	}
	
	public static void main(String[] args){
		Scanner sc = new Scanner(System.in);
		int T = sc.nextInt();
		
		//for(int i = 1 ; i <= T ; i ++){
			System.out.println(Solution.getNumPrimes(getNumCombos(40)));
		//System.out.println(Solution.getNumPrimes(getNumCombos(7)));
		//}
	}

}
